name: Build database

on:
  push:
    branches: [main]
    paths:
      - "packages/*"
      - ".github/workflows/*"
      - "update.sh"

jobs:
  package:
    strategy:
      matrix:
        os: [ubuntu-latest, ubuntu-latest, macos-latest]
        folder: [libs, tools, tools]
        output: [libs, linux, osx]
    runs-on: ${{ matrix.os }}
    container: devkitpro/devkitarm
    name: Update ${{ matrix.output }} database
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      - name: Install tools
        run: sudo apt-get install fakeroot -y
      - name: Import GPG key
        run: |
          echo '${{ secrets.GPG_PRIVATE_KEY }}' | GPG_TTY=$(tty) gpg --batch --import
          mkdir /nonexistent
          chown nobody /nonexistent
          echo '${{ secrets.GPG_PRIVATE_KEY }}' | sudo -u nobody gpg --batch --import
      - name: Build packages
        run: |
          cd ${{ matrix.folder }}
          chown -R nobody .
          for PACKAGE in */; do
            cd "$PACKAGE"
            sudo -u nobody DEVKITPRO=$DEVKITPRO DEVKITARM=$DEVKITARM dkp-makepkg -sr
            echo '${{ secrets.GPG_PASSPHRASE }}' | gpg --detach-sign --pinentry-mode loopback --passphrase-fd 0 *.pkg.tar.xz
            cd ..
          done
          chown -R root .
          mkdir /pkgtemp
          mv */*.pkg.tar.xz* /pkgtemp
      - name: Publish to Actions
        if: ${{ success() && !startsWith(github.ref, 'refs/pull') }}
        uses: actions/upload-artifact@v3
        with:
          path: /pkgtemp/*
          name: ${{ matrix.output }}

  push:
    runs-on: ubuntu-latest
    container: devkitpro/devkitarm
    name: Push to repo
    steps:
      - name: Checkout repo branch
        uses: actions/checkout@v3
        with:
          ref: repo
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: libs
          path: libs
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: linux
          path: linux
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: osx
          path: osx
      - name: Create database
        run: |
          mkdir -p {libs,{linux,macos}/x86_64}
          rm -f *.{db,sig,tar.gz,tar.xz,.tar.bz2,.tar.zstd}
          mv ${{ github.workspace }}/libs/* libs
          mv ${{ github.workspace }}/linux/* linux/x86_64
          mv ${{ github.workspace }}/osx/* osx/x86_64
          for DIR in */; do
            cd "$DIR"
            echo '${{ secrets.GPG_PASSPHRASE }}' | dkp-repo-add --verify --sign dsh-libs.db.tar.gz *.pkg.tar.xz
            cd ..
          done
      - name: Commit to repo
        run: |
          git config user.email "flamekat54@aol.com"
          git config user.name "TWLBot"

          echo "machine github.com" > "$HOME/.netrc"
          echo "  login TWLBot" >> "$HOME/.netrc"
          echo "  password ${{ secrets.GITHUB_TOKEN }}" >> "$HOME/.netrc"

          echo "machine api.github.com" >> "$HOME/.netrc"
          echo "  login TWLBot" >> "$HOME/.netrc"
          echo "  password ${{ secrets.GITHUB_TOKEN }}" >> "$HOME/.netrc"

          git stage .
          if git commit -m "Update package database"; then
            git push origin repo
          fi

